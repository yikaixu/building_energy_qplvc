* Chapter 3 Simulation study: synthetic data *

First run data_process_simulation.py, then the data will generated and saved in the folder:

processed_data_train_simulation, processed_data_train_simulation

with file format:

{building_type}_{site_id}_{building_id}_{meter_id}.csv

where meter_id stands for three types of energy we aim to predict as we state in section 3.1. 





-- Figure 2 --
File: 
main_simulation.py
 
How to run: 
keep the following segments annotated: -- non-linear part feature screen, -- fit, test and visualization, then run

Output: 
figure 1 will saved in the current working directry named as: y_train_density_meter0.pdf, y_train_density_meter1.pdf, y_train_density_meter3.pdf 



-- Table 2 --
File: 
main_simulation.py

How to run: 
keep the following segments annotated: -- visualization: show density of y, -- fit, test and visualization, then run (should set random seed for reference value)

Output: 
18 files recording feature QNIS utility values will saved in the current working directory named as: screen_nl_{meter id}_{type}_{quantile level}_{reference min value}_{reference max value}.csv



-- Figure 4 and Figure 5 --
File: 
main_simulation.py

How to run: 
keep the following segments annotated: -- visualization: show density of y, -- non-linear part feature screen,---- ablation study, then run

Output:
for the real test response in left column of Figure 3, 3 result files named as y_test_scatter_{meter id}.png will saved in the working directory, for the model predicted response in middle and right column, 6 result files named as {meter id}_{type}_test.png will saved in the working directory. In Figure 3 all files are saved using png format
since there are too many points such that using pdf format will be too large. 
for Figure 4, 18 result files named as coef_{meter id}_{type}_{qauntile level}.pdf will saved in the current working directory, we only select 9 of them that stated in
Figure 4.



-- Figure 6 --
File:
dynamic_benchmark.py

How to run:
run directly

Output:
2 result files named as benchmark_{meter id}_{building id}_{index feature}.pdf will saved in the current working directory  



-- Table 3 --
File:
main_simulation.py

How to run:
keep the following segments annotated: -- visualization: show density of y, -- non-linear part feature screen，---- fit quantile model, ---- visualization: dynamic coefficient, ---- visualization: prediction visualization, ---- visualization: show building type differences of test y, then run

Output: 
results will directly print on the console, long running time warning 





* Chapter 4 Case study: real data *

First run data_process_realdata.py, then the data will generated and saved in the folder:

processed_realdata

with file format:

{building id}_{energy type}_{year}.csv

Then, to determine features for QPLVC model, keep segments -- Evaluation: QS, -- Evaluation: ws and cp annontated, then run,
10 result files named as screen_nl_{energy type}_{quantile level}_{referebce min value}_{reference max value}.csv will saved
in the current working directory. These results should align with -- features for QPLVC list in code file



-- Table 4, 5 and 6 --
File: 
main_realdata.py

How to run:
keep the following segments annotated: -- QNIS feature selection, ---- visualization: coefficient value, ---- visualization: shap, then run

Output:
results will directly print on the console



-- Figure 7 subfigure on left top --
File:
main_realdata.py

How to run:
First, set quantile_level_grid_qplvc = [0.9] and for energy_type in ['W']
Second, keep the following segments annotated: -- QNIS feature selection, ---- QRF and ---- QGB two in -- Evaluation: QS, ---- print result: qs, ---- visualization: shap,
-- Evaluation: ws and cp, then run

Output:
result file named as coef_{energy type}_{quantile level}.pdf will saved in current working directory
 


-- Figure 7 other subfigures --
File:
main_realdata.py

How to run:
First, set quantile_level_grid_qplvc = [0.9] and for energy_type in ['W']
Second, keep the following segments annotated: -- QNIS feature selection, ----QPLVC, ---- QRF, ---- QGB three in -- Evaluation: QS, ---- print result: qs, -- Evaluation: ws and cp， then run

Output:
3 result files named as {energy type}_{feature}_{quantile level}.png will saved in current working directory  































